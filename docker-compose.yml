networks:
  admin_ui_network:
    driver: bridge

volumes:
  db_docker_volume:
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${PRIVATE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PRIVATE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PRIVATE_POSTGRES_DB}
      POSTGRES_PORT: ${PRIVATE_POSTGRES_PORT}
      
    ports:
      - "5432:5432"
    volumes:
      - ./backend/db_docker_volume:/var/lib/postgresql/data
    networks:
      - admin_ui_network
    env_file:
      - .env
  reverse-proxy:
    # The official v3 Traefik docker image
    image: traefik:v3.1
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend/traefik:/etc/traefik
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
  admin_ui_network:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - admin_ui_network
  nginx:
    image: nginx:latest
    ports:
      - "9000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - admin_ui_network
  backend:
    build: ./backend
    ports: 
      - "3001:3001"
    networks:
      - admin_ui_network
    env_file:
      - .env